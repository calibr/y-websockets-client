{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","node_modules/after/index.js","node_modules/arraybuffer.slice/index.js","node_modules/backo2/index.js","node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","node_modules/blob/index.js","node_modules/component-bind/index.js","node_modules/component-emitter/index.js","node_modules/component-inherit/index.js","node_modules/debug/browser.js","node_modules/debug/debug.js","node_modules/engine.io-client/index.js","node_modules/engine.io-client/lib/index.js","node_modules/engine.io-client/lib/socket.js","node_modules/engine.io-client/lib/transport.js","node_modules/engine.io-client/lib/transports/index.js","node_modules/engine.io-client/lib/transports/polling-jsonp.js","node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/transports/websocket.js","node_modules/engine.io-client/lib/xmlhttprequest.js","node_modules/engine.io-client/node_modules/component-emitter/index.js","node_modules/engine.io-parser/lib/browser.js","node_modules/engine.io-parser/lib/keys.js","node_modules/engine.io-parser/node_modules/has-binary/index.js","node_modules/has-binary/index.js","node_modules/has-cors/index.js","node_modules/indexof/index.js","node_modules/isarray/index.js","node_modules/json3/lib/json3.js","node_modules/ms/index.js","node_modules/parsejson/index.js","node_modules/parseqs/index.js","node_modules/parseuri/index.js","node_modules/socket.io-client/lib/index.js","node_modules/socket.io-client/lib/manager.js","node_modules/socket.io-client/lib/on.js","node_modules/socket.io-client/lib/socket.js","node_modules/socket.io-client/lib/url.js","node_modules/socket.io-parser/binary.js","node_modules/socket.io-parser/index.js","node_modules/socket.io-parser/is-buffer.js","node_modules/to-array/index.js","node_modules/utf8/utf8.js","node_modules/yeast/index.js","src/Websockets-client.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","after","count","callback","err_cb","proxy","err","result","bail","noop","arraybuffer","start","end","bytes","byteLength","slice","ArrayBuffer","abv","Uint8Array","ii","buffer","Backoff","opts","this","ms","min","max","factor","jitter","attempts","prototype","duration","Math","pow","rand","random","deviation","floor","reset","setMin","setMax","setJitter","chars","encode","len","base64","substring","decode","encoded1","encoded2","encoded3","encoded4","bufferLength","p","indexOf","mapArrayBufferViews","ary","chunk","buf","copy","set","byteOffset","BlobBuilderConstructor","options","bb","BlobBuilder","append","getBlob","type","BlobConstructor","Blob","global","WebKitBlobBuilder","MSBlobBuilder","MozBlobBuilder","blobSupported","size","blobSupportsArrayBufferView","b","blobBuilderSupported","obj","fn","args","arguments","apply","concat","Emitter","mixin","key","on","addEventListener","event","_callbacks","push","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","cb","splice","emit","listeners","hasListeners","constructor","useColors","document","documentElement","style","window","console","firebug","exception","table","navigator","userAgent","toLowerCase","match","parseInt","RegExp","$1","formatArgs","namespace","humanize","diff","c","color","Array","index","lastC","replace","log","Function","save","namespaces","storage","removeItem","debug","load","localstorage","localStorage","chrome","local","colors","formatters","j","v","JSON","stringify","enable","selectColor","prevColor","disabled","enabled","self","curr","Date","prevTime","prev","coerce","format","formatter","val","logFn","bind","split","skips","substr","names","disable","name","test","stack","message","parser","Socket","uri","parseuri","hostname","host","secure","protocol","port","query","location","agent","parseqs","upgrade","path","forceJSONP","jsonp","forceBase64","enablesXDR","timestampParam","timestampRequests","transports","readyState","writeBuffer","policyPort","rememberUpgrade","binaryType","onlyBinaryUpgrades","perMessageDeflate","threshold","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","undefined","freeGlobal","extraHeaders","Object","keys","open","clone","hasOwnProperty","parsejson","priorWebsocketSuccess","Transport","createTransport","EIO","transport","id","sid","socket","setTimeout","shift","setTransport","onDrain","packet","onPacket","onError","onClose","probe","onTransportOpen","upgradeLosesBinary","supportsBinary","failed","send","data","msg","upgrading","pause","cleanup","flush","freezeTransport","close","onerror","error","onTransportClose","onclose","onupgrade","to","onOpen","upgrades","onHandshake","setPing","filterUpgrades","pingInterval","pingTimeout","onHeartbeat","timeout","clearTimeout","pingTimeoutTimer","pingIntervalTimer","ping","sendPacket","prevBufferLen","writable","write","compress","cleanupAndClose","waitForUpgrade","reason","desc","filteredUpgrades","description","doOpen","doClose","packets","onData","decodePacket","polling","xhr","xd","xs","isSSL","xdomain","xscheme","XMLHttpRequest","XHR","JSONP","websocket","empty","JSONPPolling","Polling","___eio","script","inherit","rNewline","rEscapedNewline","parentNode","removeChild","form","iframe","doPoll","createElement","async","src","insertAt","getElementsByTagName","insertBefore","head","body","appendChild","isUAgecko","doWrite","complete","initIframe","html","iframeId","area","className","position","top","left","target","method","setAttribute","action","value","submit","attachEvent","onreadystatechange","onload","Request","isBinary","create","unloadHandler","requests","abort","request","req","sendXhr","pollXhr","setDisableHeaderCheck","setRequestHeader","responseType","withCredentials","hasXDR","onLoad","responseText","status","requestsCount","onSuccess","fromError","contentType","getResponseHeader","response","String","fromCharCode","ui8Arr","dataArray","idx","XDomainRequest","hasXHR2","yeast","poll","onPause","total","decodePayload","callbackfn","encodePayload","schema","b64","ipv6","WS","BrowserWebSocket","WebSocket","MozWebSocket","check","protocols","headers","ws","supports","binary","addEventListeners","onopen","onmessage","ev","done","encodePacket","Buffer","hasCORS","ActiveXObject","encodeBase64Object","encodeArrayBuffer","encodeBase64Packet","contentArray","resultBuffer","encodeBlobAsArrayBuffer","fr","FileReader","readAsArrayBuffer","encodeBlob","dontSendBlobs","blob","map","each","next","eachWithIndex","el","hasBinary","sliceBuffer","base64encoder","utf8","isAndroid","isPhantomJS","pong","packetslist","utf8encode","encoded","readAsDataURL","b64data","typed","basic","btoa","utf8decode","charAt","decodeBase64Packet","Number","asArray","rest","setLengthHeader","encodeOne","doneCallback","encodePayloadAsBlob","encodePayloadAsArrayBuffer","results","join","decodePayloadAsBinary","chr","ret","encodedPackets","totalLength","reduce","acc","toString","resultArray","bufferIndex","forEach","isString","ab","view","charCodeAt","lenStr","binaryIdentifier","lengthAry","bufferTail","buffers","numberTooLong","tailArray","msgLength","arr","has","_hasBinary","isBuffer","File","isArray","toJSON","runInContext","context","undef","isSupported","serialized","stringifySupported","isExtended","getClass","parse","parseSupported","root","SyntaxError","TypeError","nativeJSON","isProperty","objectProto","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","functionClass","dateClass","numberClass","stringClass","arrayClass","booleanClass","charIndexBuggy","Months","getDay","year","month","property","members","__proto__","original","parent","object","Properties","valueOf","isFunction","isConstructor","hasProperty","objectTypes","Escapes","92","34","8","12","10","13","9","leadingZeroes","toPaddedString","width","unicodePrefix","quote","useCharIndex","symbols","charCode","serialize","properties","whitespace","indentation","date","time","hours","minutes","seconds","milliseconds","element","prefix","pop","source","filter","Index","Source","Unescapes","47","98","116","110","102","114","lex","begin","isSigned","get","hasMembers","update","walk","isLoader","define","amd","function","freeExports","nodeType","previousJSON","isRestored","JSON3","noConflict","str","exec","parseFloat","y","d","h","m","short","round","long","plural","ceil","rvalidchars","rvalidescape","rvalidtokens","rvalidbraces","rtrimLeft","rtrimRight","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","re","parts","authority","ipv6uri","lookup","io","parsed","url","sameNamespace","cache","nsps","newConnection","forceNew","multiplex","Manager","managers","connect","subs","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","connecting","lastPing","encoding","packetBuffer","encoder","Encoder","decoder","Decoder","autoConnect","eio","emitAll","nsp","updateSocketIds","engine","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","reconnecting","reconnect","skipReconnect","openSub","errorSub","timer","destroy","onping","onpong","ondata","add","ondecoded","onConnecting","processPacketQueue","pack","sub","disconnect","delay","onreconnect","attempt","json","ids","acks","receiveBuffer","sendBuffer","connected","disconnected","toArray","hasBin","events","connect_error","connect_timeout","reconnect_attempt","reconnect_failed","reconnect_error","subEvents","unshift","parserType","EVENT","BINARY_EVENT","flags","CONNECT","onpacket","onconnect","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ERROR","ack","sent","emitBuffered","loc","href","isBuf","deconstructPacket","_deconstructPacket","placeholder","_placeholder","num","newData","packetData","attachments","reconstructPacket","_reconstructPacket","removeBlobs","_removeBlobs","curKey","containingObject","pendingBlobs","fileReader","bloblessData","encodeAsString","encodeAsBinary","writeEncoding","deconstruction","reconstructor","decodeString","types","BinaryReconstructor","reconPack","takeBinaryData","finishedReconstruction","binData","list","array","ucs2decode","string","extra","output","counter","ucs2encode","stringFromCharCode","checkScalarValue","codePoint","toUpperCase","createByte","encodeCodePoint","symbol","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","tmp","freeModule","version","alphabet","decoded","now","seed","extend","Y","Connector","_Y$AbstractConnector","_classCallCheck","room","role","_this","_possibleConstructorReturn","getPrototypeOf","_onConnect","userJoined","_onYjsEvent","userId","_yjs_connection_counter","setUserId","receiveMessage","_onDisconnect","peer","userLeft","_inherits","_createClass","_get","uid","AbstractConnector"],"mappings":"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","file":"y-websockets-client.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(chars){\n  \"use strict\";\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = chars.indexOf(base64[i]);\n      encoded2 = chars.indexOf(base64[i+1]);\n      encoded3 = chars.indexOf(base64[i+2]);\n      encoded4 = chars.indexOf(base64[i+3]);\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\n","/**\n * Create a blob builder even when vendor prefixes exist\n */\n\nvar BlobBuilder = global.BlobBuilder\n  || global.WebKitBlobBuilder\n  || global.MSBlobBuilder\n  || global.MozBlobBuilder;\n\n/**\n * Check if Blob constructor is supported\n */\n\nvar blobSupported = (function() {\n  try {\n    var a = new Blob(['hi']);\n    return a.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if Blob constructor supports ArrayBufferViews\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\n */\n\nvar blobSupportsArrayBufferView = blobSupported && (function() {\n  try {\n    var b = new Blob([new Uint8Array([1,2])]);\n    return b.size === 2;\n  } catch(e) {\n    return false;\n  }\n})();\n\n/**\n * Check if BlobBuilder is supported\n */\n\nvar blobBuilderSupported = BlobBuilder\n  && BlobBuilder.prototype.append\n  && BlobBuilder.prototype.getBlob;\n\n/**\n * Helper function that maps ArrayBufferViews to ArrayBuffers\n * Used by BlobBuilder constructor and old browsers that didn't\n * support it in the Blob constructor.\n */\n\nfunction mapArrayBufferViews(ary) {\n  for (var i = 0; i < ary.length; i++) {\n    var chunk = ary[i];\n    if (chunk.buffer instanceof ArrayBuffer) {\n      var buf = chunk.buffer;\n\n      // if this is a subarray, make a copy so we only\n      // include the subarray region from the underlying buffer\n      if (chunk.byteLength !== buf.byteLength) {\n        var copy = new Uint8Array(chunk.byteLength);\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\n        buf = copy.buffer;\n      }\n\n      ary[i] = buf;\n    }\n  }\n}\n\nfunction BlobBuilderConstructor(ary, options) {\n  options = options || {};\n\n  var bb = new BlobBuilder();\n  mapArrayBufferViews(ary);\n\n  for (var i = 0; i < ary.length; i++) {\n    bb.append(ary[i]);\n  }\n\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\n};\n\nfunction BlobConstructor(ary, options) {\n  mapArrayBufferViews(ary);\n  return new Blob(ary, options || {});\n};\n\nmodule.exports = (function() {\n  if (blobSupported) {\n    return blobSupportsArrayBufferView ? global.Blob : BlobConstructor;\n  } else if (blobBuilderSupported) {\n    return BlobBuilderConstructor;\n  } else {\n    return undefined;\n  }\n})();\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks['$' + event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  return ('WebkitAppearance' in document.documentElement.style) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (window.console && (console.firebug || (console.exception && console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31);\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  return JSON.stringify(v);\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs() {\n  var args = arguments;\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return args;\n\n  var c = 'color: ' + this.color;\n  args = [args[0], c, 'color: inherit'].concat(Array.prototype.slice.call(args, 1));\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n  return args;\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage(){\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = debug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lowercased letter, i.e. \"n\".\n */\n\nexports.formatters = {};\n\n/**\n * Previously assigned color.\n */\n\nvar prevColor = 0;\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n *\n * @return {Number}\n * @api private\n */\n\nfunction selectColor() {\n  return exports.colors[prevColor++ % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction debug(namespace) {\n\n  // define the `disabled` version\n  function disabled() {\n  }\n  disabled.enabled = false;\n\n  // define the `enabled` version\n  function enabled() {\n\n    var self = enabled;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // add the `color` if not set\n    if (null == self.useColors) self.useColors = exports.useColors();\n    if (null == self.color && self.useColors) self.color = selectColor();\n\n    var args = Array.prototype.slice.call(arguments);\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %o\n      args = ['%o'].concat(args);\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    if ('function' === typeof exports.formatArgs) {\n      args = exports.formatArgs.apply(self, args);\n    }\n    var logFn = enabled.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n  enabled.enabled = true;\n\n  var fn = exports.enabled(namespace) ? enabled : disabled;\n\n  fn.namespace = namespace;\n\n  return fn;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  var split = (namespaces || '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","\nmodule.exports =  require('./lib/');\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parsejson = require('parsejson');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Noop function.\n *\n * @api private\n */\n\nfunction noop(){}\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket(uri, opts){\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' == typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol == 'https' || uri.protocol == 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure :\n    (global.location && 'https:' == location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (global.location ? location.hostname : 'localhost');\n  this.port = opts.port || (global.location && location.port ?\n       location.port :\n       (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' == typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  var freeGlobal = typeof global == 'object' && global;\n  if (freeGlobal.global === freeGlobal) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n  }\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    agent: this.agent,\n    hostname: this.hostname,\n    port: this.port,\n    secure: this.secure,\n    path: this.path,\n    query: query,\n    forceJSONP: this.forceJSONP,\n    jsonp: this.jsonp,\n    forceBase64: this.forceBase64,\n    enablesXDR: this.enablesXDR,\n    timestampRequests: this.timestampRequests,\n    timestampParam: this.timestampParam,\n    policyPort: this.policyPort,\n    socket: this,\n    pfx: this.pfx,\n    key: this.key,\n    passphrase: this.passphrase,\n    cert: this.cert,\n    ca: this.ca,\n    ciphers: this.ciphers,\n    rejectUnauthorized: this.rejectUnauthorized,\n    perMessageDeflate: this.perMessageDeflate,\n    extraHeaders: this.extraHeaders\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') != -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function() {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function(transport){\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function(){\n    self.onDrain();\n  })\n  .on('packet', function(packet){\n    self.onPacket(packet);\n  })\n  .on('error', function(e){\n    self.onError(e);\n  })\n  .on('close', function(){\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 })\n    , failed = false\n    , self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen(){\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' == msg.type && 'probe' == msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' == transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' == self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport() {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  //Handle any error that happens while probing\n  function onerror(err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose(){\n    onerror(\"transport closed\");\n  }\n\n  //When the socket is closed while we're probing\n  function onclose(){\n    onerror(\"socket closed\");\n  }\n\n  //When the socket is upgraded while we're probing\n  function onupgrade(to){\n    if (transport && to.name != transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  //Remove all listeners on the transport and on self\n  function cleanup(){\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' == this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' == this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(parsejson(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if  ('closed' == this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' == self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function(){\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function() {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' != this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if('function' == typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' == typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' == this.readyState || 'closed' == this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function() {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close() {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose() {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade() {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' == this.readyState || 'open' == this.readyState || 'closing' == this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i<j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' == this.readyState || '' == this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' == this.readyState || 'open' == this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function(packets){\n  if ('open' == this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function(data){\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling(opts){\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname != location.hostname || port != opts.port;\n    xs = opts.secure != isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","\n/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Callbacks count.\n */\n\nvar index = 0;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    if (!global.___eio) global.___eio = [];\n    callbacks = global.___eio;\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (global.document && global.addEventListener) {\n    global.addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function(e){\n    self.onError('jsonp poll error',e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  }\n  else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' != typeof navigator && /gecko/i.test(navigator.userAgent);\n  \n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"'+ self.iframeId +'\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch(e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function(){\n      if (self.iframe.readyState == 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty(){}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR(opts){\n  Polling.call(this, opts);\n\n  if (global.location) {\n    var isSSL = 'https:' == location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = opts.hostname != global.location.hostname ||\n      port != opts.port;\n    this.xs = opts.secure != isSSL;\n  } else {\n    this.extraHeaders = opts.extraHeaders;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function(opts){\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function(data, fn){\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function(err){\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function(){\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function(data){\n    self.onData(data);\n  });\n  req.on('error', function(err){\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request(opts){\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined != opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function(){\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n    if (this.supportsBinary) {\n      // This has to be done after open because Firefox is stupid\n      // http://stackoverflow.com/questions/13216903/get-binary-data-with-xmlhttprequest-in-a-firefox-extension\n      xhr.responseType = 'arraybuffer';\n    }\n\n    if ('POST' == this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = true;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function(){\n        self.onLoad();\n      };\n      xhr.onerror = function(){\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function(){\n        if (4 != xhr.readyState) return;\n        if (200 == xhr.status || 1223 == xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function(){\n            self.onError(xhr.status);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function() {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (global.document) {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function(){\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function(data){\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function(err){\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function(fromError){\n  if ('undefined' == typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch(e) {}\n  }\n\n  if (global.document) {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function(){\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type').split(';')[0];\n    } catch (e) {}\n    if (contentType === 'application/octet-stream') {\n      data = this.xhr.response;\n    } else {\n      if (!this.supportsBinary) {\n        data = this.xhr.responseText;\n      } else {\n        try {\n          data = String.fromCharCode.apply(null, new Uint8Array(this.xhr.response));\n        } catch (e) {\n          var ui8Arr = new Uint8Array(this.xhr.response);\n          var dataArray = [];\n          for (var idx = 0, length = ui8Arr.length; idx < length; idx++) {\n            dataArray.push(ui8Arr[idx]);\n          }\n\n          data = String.fromCharCode.apply(null, dataArray);\n        }\n      }\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function(){\n  return 'undefined' !== typeof global.XDomainRequest && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nif (global.document) {\n  Request.requestsCount = 0;\n  Request.requests = {};\n  if (global.attachEvent) {\n    global.attachEvent('onunload', unloadHandler);\n  } else if (global.addEventListener) {\n    global.addEventListener('beforeunload', unloadHandler, false);\n  }\n}\n\nfunction unloadHandler() {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function() {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function(){\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function(onPause){\n  var pending = 0;\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause(){\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function(){\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function(){\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function(){\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function(data){\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function(packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' == self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' == packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' != this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' == this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function(){\n  var self = this;\n\n  function close(){\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' == this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n  var callbackfn = function() {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  var self = this;\n  parser.encodePayload(packets, this.supportsBinary, function(data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' == schema && this.port != 443) ||\n     ('http' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\nvar BrowserWebSocket = global.WebSocket || global.MozWebSocket;\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocket = BrowserWebSocket;\nif (!WebSocket && typeof window === 'undefined') {\n  try {\n    WebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS(opts){\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function(){\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var self = this;\n  var uri = this.uri();\n  var protocols = void(0);\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n\n  this.ws = BrowserWebSocket ? new WebSocket(uri) : new WebSocket(uri, protocols, opts);\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'buffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function(){\n  var self = this;\n\n  this.ws.onopen = function(){\n    self.onOpen();\n  };\n  this.ws.onclose = function(){\n    self.onClose();\n  };\n  this.ws.onmessage = function(ev){\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function(e){\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Override `onData` to use a timer on iOS.\n * See: https://gist.github.com/mloughran/2052006\n *\n * @api private\n */\n\nif ('undefined' != typeof navigator\n  && /iPad|iPhone|iPod/i.test(navigator.userAgent)) {\n  WS.prototype.onData = function(data){\n    var self = this;\n    setTimeout(function(){\n      Transport.prototype.onData.call(self, data);\n    }, 0);\n  };\n}\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function(packets){\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function(packet) {\n      parser.encodePacket(packet, self.supportsBinary, function(data) {\n        if (!BrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' == typeof data ? global.Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        //Sometimes the websocket has already been closed but the browser didn't\n        //have a chance of informing us about it yet, in that case send will\n        //throw an error\n        try {\n          if (BrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e){\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done(){\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function(){\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function(){\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function(){\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function(){\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' == schema && this.port != 443)\n    || ('ws' == schema && this.port != 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function(){\n  return !!WebSocket && !('__initialize' in WebSocket && this.name === WS.prototype.name);\n};\n","// browser shim for xmlhttprequest module\nvar hasCORS = require('has-cors');\n\nmodule.exports = function(opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' != typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' != typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new ActiveXObject('Microsoft.XMLHTTP');\n    } catch(e) { }\n  }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary');\nvar sliceBuffer = require('arraybuffer.slice');\nvar base64encoder = require('base64-arraybuffer');\nvar after = require('after');\nvar utf8 = require('utf8');\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = navigator.userAgent.match(/Android/i);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if ('function' == typeof supportsBinary) {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if ('function' == typeof utf8encode) {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (global.ArrayBuffer && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (Blob && data instanceof global.Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data)) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    packet.data = fr.result;\n    exports.encodePacket(packet, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (Blob && packet.data instanceof global.Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += global.btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  // String data\n  if (typeof data == 'string' || data === undefined) {\n    if (data.charAt(0) == 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      try {\n        data = utf8.decode(data);\n      } catch (e) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!global.ArrayBuffer) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary == 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, true, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data != 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data == '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = ''\n    , n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (':' != chr) {\n      length += chr;\n    } else {\n      if ('' == length || (length != (n = Number(length)))) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      msg = data.substr(i + 1, n);\n\n      if (length != msg.length) {\n        // parser error - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      if (msg.length) {\n        packet = exports.decodePacket(msg, binaryType, true);\n\n        if (err.type == packet.type && err.data == packet.data) {\n          // parser error in individual packet - ignoring payload\n          return callback(err, 0, 1);\n        }\n\n        var ret = callback(packet, i + n, l);\n        if (false === ret) return;\n      }\n\n      // advance cursor\n      i += n;\n      length = '';\n    }\n  }\n\n  if (length != '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  var numberTooLong = false;\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] == 255) break;\n\n      if (msgLength.length > 310) {\n        numberTooLong = true;\n        break;\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    if(numberTooLong) return callback(err, 0, 1);\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      if (obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n","\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","module.exports = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n","/*! JSON v3.3.2 | http://bestiejs.github.io/json3 | Copyright 2012-2014, Kit Cambridge | http://kit.mit-license.org */\n;(function () {\n  // Detect the `define` function exposed by asynchronous module loaders. The\n  // strict `define` check is necessary for compatibility with `r.js`.\n  var isLoader = typeof define === \"function\" && define.amd;\n\n  // A set of types used to distinguish objects from primitives.\n  var objectTypes = {\n    \"function\": true,\n    \"object\": true\n  };\n\n  // Detect the `exports` object exposed by CommonJS implementations.\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  // Use the `global` object exposed by Node (including Browserify via\n  // `insert-module-globals`), Narwhal, and Ringo as the default context,\n  // and the `window` object in browsers. Rhino exports a `global` function\n  // instead.\n  var root = objectTypes[typeof window] && window || this,\n      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == \"object\" && global;\n\n  if (freeGlobal && (freeGlobal[\"global\"] === freeGlobal || freeGlobal[\"window\"] === freeGlobal || freeGlobal[\"self\"] === freeGlobal)) {\n    root = freeGlobal;\n  }\n\n  // Public: Initializes JSON 3 using the given `context` object, attaching the\n  // `stringify` and `parse` functions to the specified `exports` object.\n  function runInContext(context, exports) {\n    context || (context = root[\"Object\"]());\n    exports || (exports = root[\"Object\"]());\n\n    // Native constructor aliases.\n    var Number = context[\"Number\"] || root[\"Number\"],\n        String = context[\"String\"] || root[\"String\"],\n        Object = context[\"Object\"] || root[\"Object\"],\n        Date = context[\"Date\"] || root[\"Date\"],\n        SyntaxError = context[\"SyntaxError\"] || root[\"SyntaxError\"],\n        TypeError = context[\"TypeError\"] || root[\"TypeError\"],\n        Math = context[\"Math\"] || root[\"Math\"],\n        nativeJSON = context[\"JSON\"] || root[\"JSON\"];\n\n    // Delegate to the native `stringify` and `parse` implementations.\n    if (typeof nativeJSON == \"object\" && nativeJSON) {\n      exports.stringify = nativeJSON.stringify;\n      exports.parse = nativeJSON.parse;\n    }\n\n    // Convenience aliases.\n    var objectProto = Object.prototype,\n        getClass = objectProto.toString,\n        isProperty, forEach, undef;\n\n    // Test the `Date#getUTC*` methods. Based on work by @Yaffle.\n    var isExtended = new Date(-3509827334573292);\n    try {\n      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical\n      // results for certain dates in Opera >= 10.53.\n      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 &&\n        // Safari < 2.0.2 stores the internal millisecond time value correctly,\n        // but clips the values returned by the date methods to the range of\n        // signed 32-bit integers ([-2 ** 31, 2 ** 31 - 1]).\n        isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;\n    } catch (exception) {}\n\n    // Internal: Determines whether the native `JSON.stringify` and `parse`\n    // implementations are spec-compliant. Based on work by Ken Snyder.\n    function has(name) {\n      if (has[name] !== undef) {\n        // Return cached feature test result.\n        return has[name];\n      }\n      var isSupported;\n      if (name == \"bug-string-char-index\") {\n        // IE <= 7 doesn't support accessing string characters using square\n        // bracket notation. IE 8 only supports this for primitives.\n        isSupported = \"a\"[0] != \"a\";\n      } else if (name == \"json\") {\n        // Indicates whether both `JSON.stringify` and `JSON.parse` are\n        // supported.\n        isSupported = has(\"json-stringify\") && has(\"json-parse\");\n      } else {\n        var value, serialized = '{\"a\":[1,true,false,null,\"\\\\u0000\\\\b\\\\n\\\\f\\\\r\\\\t\"]}';\n        // Test `JSON.stringify`.\n        if (name == \"json-stringify\") {\n          var stringify = exports.stringify, stringifySupported = typeof stringify == \"function\" && isExtended;\n          if (stringifySupported) {\n            // A test function object with a custom `toJSON` method.\n            (value = function () {\n              return 1;\n            }).toJSON = value;\n            try {\n              stringifySupported =\n                // Firefox 3.1b1 and b2 serialize string, number, and boolean\n                // primitives as object literals.\n                stringify(0) === \"0\" &&\n                // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object\n                // literals.\n                stringify(new Number()) === \"0\" &&\n                stringify(new String()) == '\"\"' &&\n                // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or\n                // does not define a canonical JSON representation (this applies to\n                // objects with `toJSON` properties as well, *unless* they are nested\n                // within an object or array).\n                stringify(getClass) === undef &&\n                // IE 8 serializes `undefined` as `\"undefined\"`. Safari <= 5.1.7 and\n                // FF 3.1b3 pass this test.\n                stringify(undef) === undef &&\n                // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,\n                // respectively, if the value is omitted entirely.\n                stringify() === undef &&\n                // FF 3.1b1, 2 throw an error if the given value is not a number,\n                // string, array, object, Boolean, or `null` literal. This applies to\n                // objects with custom `toJSON` methods as well, unless they are nested\n                // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`\n                // methods entirely.\n                stringify(value) === \"1\" &&\n                stringify([value]) == \"[1]\" &&\n                // Prototype <= 1.6.1 serializes `[undefined]` as `\"[]\"` instead of\n                // `\"[null]\"`.\n                stringify([undef]) == \"[null]\" &&\n                // YUI 3.0.0b1 fails to serialize `null` literals.\n                stringify(null) == \"null\" &&\n                // FF 3.1b1, 2 halts serialization if an array contains a function:\n                // `[1, true, getClass, 1]` serializes as \"[1,true,],\". FF 3.1b3\n                // elides non-JSON values from objects and arrays, unless they\n                // define custom `toJSON` methods.\n                stringify([undef, getClass, null]) == \"[null,null,null]\" &&\n                // Simple serialization test. FF 3.1b1 uses Unicode escape sequences\n                // where character escape codes are expected (e.g., `\\b` => `\\u0008`).\n                stringify({ \"a\": [value, true, false, null, \"\\x00\\b\\n\\f\\r\\t\"] }) == serialized &&\n                // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.\n                stringify(null, value) === \"1\" &&\n                stringify([1, 2], null, 1) == \"[\\n 1,\\n 2\\n]\" &&\n                // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly\n                // serialize extended years.\n                stringify(new Date(-8.64e15)) == '\"-271821-04-20T00:00:00.000Z\"' &&\n                // The milliseconds are optional in ES 5, but required in 5.1.\n                stringify(new Date(8.64e15)) == '\"+275760-09-13T00:00:00.000Z\"' &&\n                // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative\n                // four-digit years instead of six-digit years. Credits: @Yaffle.\n                stringify(new Date(-621987552e5)) == '\"-000001-01-01T00:00:00.000Z\"' &&\n                // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond\n                // values less than 1000. Credits: @Yaffle.\n                stringify(new Date(-1)) == '\"1969-12-31T23:59:59.999Z\"';\n            } catch (exception) {\n              stringifySupported = false;\n            }\n          }\n          isSupported = stringifySupported;\n        }\n        // Test `JSON.parse`.\n        if (name == \"json-parse\") {\n          var parse = exports.parse;\n          if (typeof parse == \"function\") {\n            try {\n              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.\n              // Conforming implementations should also coerce the initial argument to\n              // a string prior to parsing.\n              if (parse(\"0\") === 0 && !parse(false)) {\n                // Simple parsing test.\n                value = parse(serialized);\n                var parseSupported = value[\"a\"].length == 5 && value[\"a\"][0] === 1;\n                if (parseSupported) {\n                  try {\n                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.\n                    parseSupported = !parse('\"\\t\"');\n                  } catch (exception) {}\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading\n                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow\n                      // certain octal literals.\n                      parseSupported = parse(\"01\") !== 1;\n                    } catch (exception) {}\n                  }\n                  if (parseSupported) {\n                    try {\n                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal\n                      // points. These environments, along with FF 3.1b1 and 2,\n                      // also allow trailing commas in JSON objects and arrays.\n                      parseSupported = parse(\"1.\") !== 1;\n                    } catch (exception) {}\n                  }\n                }\n              }\n            } catch (exception) {\n              parseSupported = false;\n            }\n          }\n          isSupported = parseSupported;\n        }\n      }\n      return has[name] = !!isSupported;\n    }\n\n    if (!has(\"json\")) {\n      // Common `[[Class]]` name aliases.\n      var functionClass = \"[object Function]\",\n          dateClass = \"[object Date]\",\n          numberClass = \"[object Number]\",\n          stringClass = \"[object String]\",\n          arrayClass = \"[object Array]\",\n          booleanClass = \"[object Boolean]\";\n\n      // Detect incomplete support for accessing string characters by index.\n      var charIndexBuggy = has(\"bug-string-char-index\");\n\n      // Define additional utility methods if the `Date` methods are buggy.\n      if (!isExtended) {\n        var floor = Math.floor;\n        // A mapping between the months of the year and the number of days between\n        // January 1st and the first of the respective month.\n        var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];\n        // Internal: Calculates the number of days between the Unix epoch and the\n        // first day of the given month.\n        var getDay = function (year, month) {\n          return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);\n        };\n      }\n\n      // Internal: Determines if a property is a direct property of the given\n      // object. Delegates to the native `Object#hasOwnProperty` method.\n      if (!(isProperty = objectProto.hasOwnProperty)) {\n        isProperty = function (property) {\n          var members = {}, constructor;\n          if ((members.__proto__ = null, members.__proto__ = {\n            // The *proto* property cannot be set multiple times in recent\n            // versions of Firefox and SeaMonkey.\n            \"toString\": 1\n          }, members).toString != getClass) {\n            // Safari <= 2.0.3 doesn't implement `Object#hasOwnProperty`, but\n            // supports the mutable *proto* property.\n            isProperty = function (property) {\n              // Capture and break the object's prototype chain (see section 8.6.2\n              // of the ES 5.1 spec). The parenthesized expression prevents an\n              // unsafe transformation by the Closure Compiler.\n              var original = this.__proto__, result = property in (this.__proto__ = null, this);\n              // Restore the original prototype chain.\n              this.__proto__ = original;\n              return result;\n            };\n          } else {\n            // Capture a reference to the top-level `Object` constructor.\n            constructor = members.constructor;\n            // Use the `constructor` property to simulate `Object#hasOwnProperty` in\n            // other environments.\n            isProperty = function (property) {\n              var parent = (this.constructor || constructor).prototype;\n              return property in this && !(property in parent && this[property] === parent[property]);\n            };\n          }\n          members = null;\n          return isProperty.call(this, property);\n        };\n      }\n\n      // Internal: Normalizes the `for...in` iteration algorithm across\n      // environments. Each enumerated key is yielded to a `callback` function.\n      forEach = function (object, callback) {\n        var size = 0, Properties, members, property;\n\n        // Tests for bugs in the current environment's `for...in` algorithm. The\n        // `valueOf` property inherits the non-enumerable flag from\n        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.\n        (Properties = function () {\n          this.valueOf = 0;\n        }).prototype.valueOf = 0;\n\n        // Iterate over a new instance of the `Properties` class.\n        members = new Properties();\n        for (property in members) {\n          // Ignore all properties inherited from `Object.prototype`.\n          if (isProperty.call(members, property)) {\n            size++;\n          }\n        }\n        Properties = members = null;\n\n        // Normalize the iteration algorithm.\n        if (!size) {\n          // A list of non-enumerable properties inherited from `Object.prototype`.\n          members = [\"valueOf\", \"toString\", \"toLocaleString\", \"propertyIsEnumerable\", \"isPrototypeOf\", \"hasOwnProperty\", \"constructor\"];\n          // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable\n          // properties.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, length;\n            var hasProperty = !isFunction && typeof object.constructor != \"function\" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;\n            for (property in object) {\n              // Gecko <= 1.0 enumerates the `prototype` property of functions under\n              // certain conditions; IE does not.\n              if (!(isFunction && property == \"prototype\") && hasProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for each non-enumerable property.\n            for (length = members.length; property = members[--length]; hasProperty.call(object, property) && callback(property));\n          };\n        } else if (size == 2) {\n          // Safari <= 2.0.4 enumerates shadowed properties twice.\n          forEach = function (object, callback) {\n            // Create a set of iterated properties.\n            var members = {}, isFunction = getClass.call(object) == functionClass, property;\n            for (property in object) {\n              // Store each property name to prevent double enumeration. The\n              // `prototype` property of functions is not enumerated due to cross-\n              // environment inconsistencies.\n              if (!(isFunction && property == \"prototype\") && !isProperty.call(members, property) && (members[property] = 1) && isProperty.call(object, property)) {\n                callback(property);\n              }\n            }\n          };\n        } else {\n          // No bugs detected; use the standard `for...in` algorithm.\n          forEach = function (object, callback) {\n            var isFunction = getClass.call(object) == functionClass, property, isConstructor;\n            for (property in object) {\n              if (!(isFunction && property == \"prototype\") && isProperty.call(object, property) && !(isConstructor = property === \"constructor\")) {\n                callback(property);\n              }\n            }\n            // Manually invoke the callback for the `constructor` property due to\n            // cross-environment inconsistencies.\n            if (isConstructor || isProperty.call(object, (property = \"constructor\"))) {\n              callback(property);\n            }\n          };\n        }\n        return forEach(object, callback);\n      };\n\n      // Public: Serializes a JavaScript `value` as a JSON string. The optional\n      // `filter` argument may specify either a function that alters how object and\n      // array members are serialized, or an array of strings and numbers that\n      // indicates which properties should be serialized. The optional `width`\n      // argument may be either a string or number that specifies the indentation\n      // level of the output.\n      if (!has(\"json-stringify\")) {\n        // Internal: A map of control characters and their escaped equivalents.\n        var Escapes = {\n          92: \"\\\\\\\\\",\n          34: '\\\\\"',\n          8: \"\\\\b\",\n          12: \"\\\\f\",\n          10: \"\\\\n\",\n          13: \"\\\\r\",\n          9: \"\\\\t\"\n        };\n\n        // Internal: Converts `value` into a zero-padded string such that its\n        // length is at least equal to `width`. The `width` must be <= 6.\n        var leadingZeroes = \"000000\";\n        var toPaddedString = function (width, value) {\n          // The `|| 0` expression is necessary to work around a bug in\n          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== \"0\"`.\n          return (leadingZeroes + (value || 0)).slice(-width);\n        };\n\n        // Internal: Double-quotes a string `value`, replacing all ASCII control\n        // characters (characters with code unit values between 0 and 31) with\n        // their escaped equivalents. This is an implementation of the\n        // `Quote(value)` operation defined in ES 5.1 section 15.12.3.\n        var unicodePrefix = \"\\\\u00\";\n        var quote = function (value) {\n          var result = '\"', index = 0, length = value.length, useCharIndex = !charIndexBuggy || length > 10;\n          var symbols = useCharIndex && (charIndexBuggy ? value.split(\"\") : value);\n          for (; index < length; index++) {\n            var charCode = value.charCodeAt(index);\n            // If the character is a control character, append its Unicode or\n            // shorthand escape sequence; otherwise, append the character as-is.\n            switch (charCode) {\n              case 8: case 9: case 10: case 12: case 13: case 34: case 92:\n                result += Escapes[charCode];\n                break;\n              default:\n                if (charCode < 32) {\n                  result += unicodePrefix + toPaddedString(2, charCode.toString(16));\n                  break;\n                }\n                result += useCharIndex ? symbols[index] : value.charAt(index);\n            }\n          }\n          return result + '\"';\n        };\n\n        // Internal: Recursively serializes an object. Implements the\n        // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.\n        var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {\n          var value, className, year, month, date, time, hours, minutes, seconds, milliseconds, results, element, index, length, prefix, result;\n          try {\n            // Necessary for host object support.\n            value = object[property];\n          } catch (exception) {}\n          if (typeof value == \"object\" && value) {\n            className = getClass.call(value);\n            if (className == dateClass && !isProperty.call(value, \"toJSON\")) {\n              if (value > -1 / 0 && value < 1 / 0) {\n                // Dates are serialized according to the `Date#toJSON` method\n                // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15\n                // for the ISO 8601 date time string format.\n                if (getDay) {\n                  // Manually compute the year, month, date, hours, minutes,\n                  // seconds, and milliseconds if the `getUTC*` methods are\n                  // buggy. Adapted from @Yaffle's `date-shim` project.\n                  date = floor(value / 864e5);\n                  for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);\n                  for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);\n                  date = 1 + date - getDay(year, month);\n                  // The `time` value specifies the time within the day (see ES\n                  // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used\n                  // to compute `A modulo B`, as the `%` operator does not\n                  // correspond to the `modulo` operation for negative numbers.\n                  time = (value % 864e5 + 864e5) % 864e5;\n                  // The hours, minutes, seconds, and milliseconds are obtained by\n                  // decomposing the time within the day. See section 15.9.1.10.\n                  hours = floor(time / 36e5) % 24;\n                  minutes = floor(time / 6e4) % 60;\n                  seconds = floor(time / 1e3) % 60;\n                  milliseconds = time % 1e3;\n                } else {\n                  year = value.getUTCFullYear();\n                  month = value.getUTCMonth();\n                  date = value.getUTCDate();\n                  hours = value.getUTCHours();\n                  minutes = value.getUTCMinutes();\n                  seconds = value.getUTCSeconds();\n                  milliseconds = value.getUTCMilliseconds();\n                }\n                // Serialize extended years correctly.\n                value = (year <= 0 || year >= 1e4 ? (year < 0 ? \"-\" : \"+\") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) +\n                  \"-\" + toPaddedString(2, month + 1) + \"-\" + toPaddedString(2, date) +\n                  // Months, dates, hours, minutes, and seconds should have two\n                  // digits; milliseconds should have three.\n                  \"T\" + toPaddedString(2, hours) + \":\" + toPaddedString(2, minutes) + \":\" + toPaddedString(2, seconds) +\n                  // Milliseconds are optional in ES 5.0, but required in 5.1.\n                  \".\" + toPaddedString(3, milliseconds) + \"Z\";\n              } else {\n                value = null;\n              }\n            } else if (typeof value.toJSON == \"function\" && ((className != numberClass && className != stringClass && className != arrayClass) || isProperty.call(value, \"toJSON\"))) {\n              // Prototype <= 1.6.1 adds non-standard `toJSON` methods to the\n              // `Number`, `String`, `Date`, and `Array` prototypes. JSON 3\n              // ignores all `toJSON` methods on these objects unless they are\n              // defined directly on an instance.\n              value = value.toJSON(property);\n            }\n          }\n          if (callback) {\n            // If a replacement function was provided, call it to obtain the value\n            // for serialization.\n            value = callback.call(object, property, value);\n          }\n          if (value === null) {\n            return \"null\";\n          }\n          className = getClass.call(value);\n          if (className == booleanClass) {\n            // Booleans are represented literally.\n            return \"\" + value;\n          } else if (className == numberClass) {\n            // JSON numbers must be finite. `Infinity` and `NaN` are serialized as\n            // `\"null\"`.\n            return value > -1 / 0 && value < 1 / 0 ? \"\" + value : \"null\";\n          } else if (className == stringClass) {\n            // Strings are double-quoted and escaped.\n            return quote(\"\" + value);\n          }\n          // Recursively serialize objects and arrays.\n          if (typeof value == \"object\") {\n            // Check for cyclic structures. This is a linear search; performance\n            // is inversely proportional to the number of unique nested objects.\n            for (length = stack.length; length--;) {\n              if (stack[length] === value) {\n                // Cyclic structures cannot be serialized by `JSON.stringify`.\n                throw TypeError();\n              }\n            }\n            // Add the object to the stack of traversed objects.\n            stack.push(value);\n            results = [];\n            // Save the current indentation level and indent one additional level.\n            prefix = indentation;\n            indentation += whitespace;\n            if (className == arrayClass) {\n              // Recursively serialize array elements.\n              for (index = 0, length = value.length; index < length; index++) {\n                element = serialize(index, value, callback, properties, whitespace, indentation, stack);\n                results.push(element === undef ? \"null\" : element);\n              }\n              result = results.length ? (whitespace ? \"[\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"]\" : (\"[\" + results.join(\",\") + \"]\")) : \"[]\";\n            } else {\n              // Recursively serialize object members. Members are selected from\n              // either a user-specified list of property names, or the object\n              // itself.\n              forEach(properties || value, function (property) {\n                var element = serialize(property, value, callback, properties, whitespace, indentation, stack);\n                if (element !== undef) {\n                  // According to ES 5.1 section 15.12.3: \"If `gap` {whitespace}\n                  // is not the empty string, let `member` {quote(property) + \":\"}\n                  // be the concatenation of `member` and the `space` character.\"\n                  // The \"`space` character\" refers to the literal space\n                  // character, not the `space` {width} argument provided to\n                  // `JSON.stringify`.\n                  results.push(quote(property) + \":\" + (whitespace ? \" \" : \"\") + element);\n                }\n              });\n              result = results.length ? (whitespace ? \"{\\n\" + indentation + results.join(\",\\n\" + indentation) + \"\\n\" + prefix + \"}\" : (\"{\" + results.join(\",\") + \"}\")) : \"{}\";\n            }\n            // Remove the object from the traversed object stack.\n            stack.pop();\n            return result;\n          }\n        };\n\n        // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.\n        exports.stringify = function (source, filter, width) {\n          var whitespace, callback, properties, className;\n          if (objectTypes[typeof filter] && filter) {\n            if ((className = getClass.call(filter)) == functionClass) {\n              callback = filter;\n            } else if (className == arrayClass) {\n              // Convert the property names array into a makeshift set.\n              properties = {};\n              for (var index = 0, length = filter.length, value; index < length; value = filter[index++], ((className = getClass.call(value)), className == stringClass || className == numberClass) && (properties[value] = 1));\n            }\n          }\n          if (width) {\n            if ((className = getClass.call(width)) == numberClass) {\n              // Convert the `width` to an integer and create a string containing\n              // `width` number of space characters.\n              if ((width -= width % 1) > 0) {\n                for (whitespace = \"\", width > 10 && (width = 10); whitespace.length < width; whitespace += \" \");\n              }\n            } else if (className == stringClass) {\n              whitespace = width.length <= 10 ? width : width.slice(0, 10);\n            }\n          }\n          // Opera <= 7.54u2 discards the values associated with empty string keys\n          // (`\"\"`) only if they are used directly within an object member list\n          // (e.g., `!(\"\" in { \"\": 1})`).\n          return serialize(\"\", (value = {}, value[\"\"] = source, value), callback, properties, whitespace, \"\", []);\n        };\n      }\n\n      // Public: Parses a JSON source string.\n      if (!has(\"json-parse\")) {\n        var fromCharCode = String.fromCharCode;\n\n        // Internal: A map of escaped control characters and their unescaped\n        // equivalents.\n        var Unescapes = {\n          92: \"\\\\\",\n          34: '\"',\n          47: \"/\",\n          98: \"\\b\",\n          116: \"\\t\",\n          110: \"\\n\",\n          102: \"\\f\",\n          114: \"\\r\"\n        };\n\n        // Internal: Stores the parser state.\n        var Index, Source;\n\n        // Internal: Resets the parser state and throws a `SyntaxError`.\n        var abort = function () {\n          Index = Source = null;\n          throw SyntaxError();\n        };\n\n        // Internal: Returns the next token, or `\"$\"` if the parser has reached\n        // the end of the source string. A token may be a string, number, `null`\n        // literal, or Boolean literal.\n        var lex = function () {\n          var source = Source, length = source.length, value, begin, position, isSigned, charCode;\n          while (Index < length) {\n            charCode = source.charCodeAt(Index);\n            switch (charCode) {\n              case 9: case 10: case 13: case 32:\n                // Skip whitespace tokens, including tabs, carriage returns, line\n                // feeds, and space characters.\n                Index++;\n                break;\n              case 123: case 125: case 91: case 93: case 58: case 44:\n                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at\n                // the current position.\n                value = charIndexBuggy ? source.charAt(Index) : source[Index];\n                Index++;\n                return value;\n              case 34:\n                // `\"` delimits a JSON string; advance to the next character and\n                // begin parsing the string. String tokens are prefixed with the\n                // sentinel `@` character to distinguish them from punctuators and\n                // end-of-string tokens.\n                for (value = \"@\", Index++; Index < length;) {\n                  charCode = source.charCodeAt(Index);\n                  if (charCode < 32) {\n                    // Unescaped ASCII control characters (those with a code unit\n                    // less than the space character) are not permitted.\n                    abort();\n                  } else if (charCode == 92) {\n                    // A reverse solidus (`\\`) marks the beginning of an escaped\n                    // control character (including `\"`, `\\`, and `/`) or Unicode\n                    // escape sequence.\n                    charCode = source.charCodeAt(++Index);\n                    switch (charCode) {\n                      case 92: case 34: case 47: case 98: case 116: case 110: case 102: case 114:\n                        // Revive escaped control characters.\n                        value += Unescapes[charCode];\n                        Index++;\n                        break;\n                      case 117:\n                        // `\\u` marks the beginning of a Unicode escape sequence.\n                        // Advance to the first character and validate the\n                        // four-digit code point.\n                        begin = ++Index;\n                        for (position = Index + 4; Index < position; Index++) {\n                          charCode = source.charCodeAt(Index);\n                          // A valid sequence comprises four hexdigits (case-\n                          // insensitive) that form a single hexadecimal value.\n                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {\n                            // Invalid Unicode escape sequence.\n                            abort();\n                          }\n                        }\n                        // Revive the escaped character.\n                        value += fromCharCode(\"0x\" + source.slice(begin, Index));\n                        break;\n                      default:\n                        // Invalid escape sequence.\n                        abort();\n                    }\n                  } else {\n                    if (charCode == 34) {\n                      // An unescaped double-quote character marks the end of the\n                      // string.\n                      break;\n                    }\n                    charCode = source.charCodeAt(Index);\n                    begin = Index;\n                    // Optimize for the common case where a string is valid.\n                    while (charCode >= 32 && charCode != 92 && charCode != 34) {\n                      charCode = source.charCodeAt(++Index);\n                    }\n                    // Append the string as-is.\n                    value += source.slice(begin, Index);\n                  }\n                }\n                if (source.charCodeAt(Index) == 34) {\n                  // Advance to the next character and return the revived string.\n                  Index++;\n                  return value;\n                }\n                // Unterminated string.\n                abort();\n              default:\n                // Parse numbers and literals.\n                begin = Index;\n                // Advance past the negative sign, if one is specified.\n                if (charCode == 45) {\n                  isSigned = true;\n                  charCode = source.charCodeAt(++Index);\n                }\n                // Parse an integer or floating-point value.\n                if (charCode >= 48 && charCode <= 57) {\n                  // Leading zeroes are interpreted as octal literals.\n                  if (charCode == 48 && ((charCode = source.charCodeAt(Index + 1)), charCode >= 48 && charCode <= 57)) {\n                    // Illegal octal literal.\n                    abort();\n                  }\n                  isSigned = false;\n                  // Parse the integer component.\n                  for (; Index < length && ((charCode = source.charCodeAt(Index)), charCode >= 48 && charCode <= 57); Index++);\n                  // Floats cannot contain a leading decimal point; however, this\n                  // case is already accounted for by the parser.\n                  if (source.charCodeAt(Index) == 46) {\n                    position = ++Index;\n                    // Parse the decimal component.\n                    for (; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal trailing decimal.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Parse exponents. The `e` denoting the exponent is\n                  // case-insensitive.\n                  charCode = source.charCodeAt(Index);\n                  if (charCode == 101 || charCode == 69) {\n                    charCode = source.charCodeAt(++Index);\n                    // Skip past the sign following the exponent, if one is\n                    // specified.\n                    if (charCode == 43 || charCode == 45) {\n                      Index++;\n                    }\n                    // Parse the exponential component.\n                    for (position = Index; position < length && ((charCode = source.charCodeAt(position)), charCode >= 48 && charCode <= 57); position++);\n                    if (position == Index) {\n                      // Illegal empty exponent.\n                      abort();\n                    }\n                    Index = position;\n                  }\n                  // Coerce the parsed value to a JavaScript number.\n                  return +source.slice(begin, Index);\n                }\n                // A negative sign may only precede numbers.\n                if (isSigned) {\n                  abort();\n                }\n                // `true`, `false`, and `null` literals.\n                if (source.slice(Index, Index + 4) == \"true\") {\n                  Index += 4;\n                  return true;\n                } else if (source.slice(Index, Index + 5) == \"false\") {\n                  Index += 5;\n                  return false;\n                } else if (source.slice(Index, Index + 4) == \"null\") {\n                  Index += 4;\n                  return null;\n                }\n                // Unrecognized token.\n                abort();\n            }\n          }\n          // Return the sentinel `$` character if the parser has reached the end\n          // of the source string.\n          return \"$\";\n        };\n\n        // Internal: Parses a JSON `value` token.\n        var get = function (value) {\n          var results, hasMembers;\n          if (value == \"$\") {\n            // Unexpected end of input.\n            abort();\n          }\n          if (typeof value == \"string\") {\n            if ((charIndexBuggy ? value.charAt(0) : value[0]) == \"@\") {\n              // Remove the sentinel `@` character.\n              return value.slice(1);\n            }\n            // Parse object and array literals.\n            if (value == \"[\") {\n              // Parses a JSON array, returning a new JavaScript array.\n              results = [];\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing square bracket marks the end of the array literal.\n                if (value == \"]\") {\n                  break;\n                }\n                // If the array literal contains elements, the current token\n                // should be a comma separating the previous element from the\n                // next.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"]\") {\n                      // Unexpected trailing `,` in array literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each array element.\n                    abort();\n                  }\n                }\n                // Elisions and leading commas are not permitted.\n                if (value == \",\") {\n                  abort();\n                }\n                results.push(get(value));\n              }\n              return results;\n            } else if (value == \"{\") {\n              // Parses a JSON object, returning a new JavaScript object.\n              results = {};\n              for (;; hasMembers || (hasMembers = true)) {\n                value = lex();\n                // A closing curly brace marks the end of the object literal.\n                if (value == \"}\") {\n                  break;\n                }\n                // If the object literal contains members, the current token\n                // should be a comma separator.\n                if (hasMembers) {\n                  if (value == \",\") {\n                    value = lex();\n                    if (value == \"}\") {\n                      // Unexpected trailing `,` in object literal.\n                      abort();\n                    }\n                  } else {\n                    // A `,` must separate each object member.\n                    abort();\n                  }\n                }\n                // Leading commas are not permitted, object property names must be\n                // double-quoted strings, and a `:` must separate each property\n                // name and value.\n                if (value == \",\" || typeof value != \"string\" || (charIndexBuggy ? value.charAt(0) : value[0]) != \"@\" || lex() != \":\") {\n                  abort();\n                }\n                results[value.slice(1)] = get(lex());\n              }\n              return results;\n            }\n            // Unexpected token encountered.\n            abort();\n          }\n          return value;\n        };\n\n        // Internal: Updates a traversed object member.\n        var update = function (source, property, callback) {\n          var element = walk(source, property, callback);\n          if (element === undef) {\n            delete source[property];\n          } else {\n            source[property] = element;\n          }\n        };\n\n        // Internal: Recursively traverses a parsed JSON object, invoking the\n        // `callback` function for each value. This is an implementation of the\n        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.\n        var walk = function (source, property, callback) {\n          var value = source[property], length;\n          if (typeof value == \"object\" && value) {\n            // `forEach` can't be used to traverse an array in Opera <= 8.54\n            // because its `Object#hasOwnProperty` implementation returns `false`\n            // for array indices (e.g., `![1, 2, 3].hasOwnProperty(\"0\")`).\n            if (getClass.call(value) == arrayClass) {\n              for (length = value.length; length--;) {\n                update(value, length, callback);\n              }\n            } else {\n              forEach(value, function (property) {\n                update(value, property, callback);\n              });\n            }\n          }\n          return callback.call(source, property, value);\n        };\n\n        // Public: `JSON.parse`. See ES 5.1 section 15.12.2.\n        exports.parse = function (source, callback) {\n          var result, value;\n          Index = 0;\n          Source = \"\" + source;\n          result = get(lex());\n          // If a JSON string contains multiple tokens, it is invalid.\n          if (lex() != \"$\") {\n            abort();\n          }\n          // Reset the parser state.\n          Index = Source = null;\n          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[\"\"] = result, value), \"\", callback) : result;\n        };\n      }\n    }\n\n    exports[\"runInContext\"] = runInContext;\n    return exports;\n  }\n\n  if (freeExports && !isLoader) {\n    // Export for CommonJS environments.\n    runInContext(root, freeExports);\n  } else {\n    // Export for web browsers and JavaScript engines.\n    var nativeJSON = root.JSON,\n        previousJSON = root[\"JSON3\"],\n        isRestored = false;\n\n    var JSON3 = runInContext(root, (root[\"JSON3\"] = {\n      // Public: Restores the original value of the global `JSON` object and\n      // returns a reference to the `JSON3` object.\n      \"noConflict\": function () {\n        if (!isRestored) {\n          isRestored = true;\n          root.JSON = nativeJSON;\n          root[\"JSON3\"] = previousJSON;\n          nativeJSON = previousJSON = null;\n        }\n        return JSON3;\n      }\n    }));\n\n    root.JSON = {\n      \"parse\": JSON3.parse,\n      \"stringify\": JSON3.stringify\n    };\n  }\n\n  // Export for asynchronous module loaders.\n  if (isLoader) {\n    define(function () {\n      return JSON3;\n    });\n  }\n}).call(this);\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n * JSON parse.\n *\n * @see Based on jQuery#parseJSON (MIT) and JSON2\n * @api private\n */\n\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\n\n  // Attempt to parse using the native JSON parser first\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\n      .replace(rvalidtokens, ']')\n      .replace(rvalidbraces, ''))) {\n    return (new Function('return ' + data))();\n  }\n};","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    return uri;\n};\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup(uri, opts) {\n  if (typeof uri == 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n\n  return io.socket(parsed.path);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager(uri, opts){\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' == typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  this.encoder = new parser.Encoder();\n  this.decoder = new parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function() {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function(){\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.engine.id;\n    }\n  }\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function(v){\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function(v){\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function(v){\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function(v){\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function(v){\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function(v){\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function() {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function(fn){\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function() {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function(data){\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function(){\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function(){\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function(){\n  this.lastPing = new Date;\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function(){\n  this.emitAll('pong', new Date - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function(data){\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function(packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function(err){\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function(nsp){\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function(){\n      socket.id = self.engine.id;\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting evnet is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting() {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function(socket){\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function(packet){\n  debug('writing packet %j', packet);\n  var self = this;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function(encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function() {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function(){\n  debug('cleanup');\n\n  var sub;\n  while (sub = this.subs.shift()) sub.destroy();\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function(){\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' == this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function(reason){\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function(){\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function(){\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function(err){\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function(){\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function(){\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on(obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function(){\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar hasBin = require('has-binary');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket(io, nsp){\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function() {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function(){\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' == this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function(){\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var parserType = parser.EVENT; // default\n  if (hasBin(args)) { parserType = parser.BINARY_EVENT; } // binary\n  var packet = { type: parserType, data: args };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' == typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  delete this.flags;\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function(packet){\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function(){\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' != this.nsp) {\n    this.packet({ type: parser.CONNECT });\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  if (packet.nsp != this.nsp) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      type: type,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  var ack = this.acks[packet.id];\n  if ('function' == typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function(){\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function(){\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function(){\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function(compress){\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url(uri, loc){\n  var obj = uri;\n\n  // default to window.location\n  var loc = loc || global.location;\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' == typeof uri) {\n    if ('/' == uri.charAt(0)) {\n      if ('/' == uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' != typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    }\n    else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port == obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet){\n  var buffers = [];\n  var packetData = packet.data;\n\n  function _deconstructPacket(data) {\n    if (!data) return data;\n\n    if (isBuf(data)) {\n      var placeholder = { _placeholder: true, num: buffers.length };\n      buffers.push(data);\n      return placeholder;\n    } else if (isArray(data)) {\n      var newData = new Array(data.length);\n      for (var i = 0; i < data.length; i++) {\n        newData[i] = _deconstructPacket(data[i]);\n      }\n      return newData;\n    } else if ('object' == typeof data && !(data instanceof Date)) {\n      var newData = {};\n      for (var key in data) {\n        newData[key] = _deconstructPacket(data[key]);\n      }\n      return newData;\n    }\n    return data;\n  }\n\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  var curPlaceHolder = 0;\n\n  function _reconstructPacket(data) {\n    if (data && data._placeholder) {\n      var buf = buffers[data.num]; // appropriate buffer (should be natural order anyway)\n      return buf;\n    } else if (isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        data[i] = _reconstructPacket(data[i]);\n      }\n      return data;\n    } else if (data && 'object' == typeof data) {\n      for (var key in data) {\n        data[key] = _reconstructPacket(data[key]);\n      }\n      return data;\n    }\n    return data;\n  }\n\n  packet.data = _reconstructPacket(packet.data);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((global.Blob && obj instanceof Blob) ||\n        (global.File && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (obj && 'object' == typeof obj && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar json = require('json3');\nvar isArray = require('isarray');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    encodeAsBinary(obj, callback);\n  }\n  else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n  var str = '';\n  var nsp = false;\n\n  // first is type\n  str += obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT == obj.type || exports.BINARY_ACK == obj.type) {\n    str += obj.attachments;\n    str += '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' != obj.nsp) {\n    nsp = true;\n    str += obj.nsp;\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    if (nsp) {\n      str += ',';\n      nsp = false;\n    }\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    if (nsp) str += ',';\n    str += json.stringify(obj.data);\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an ecoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if ('string' == typeof obj) {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT == packet.type || exports.BINARY_ACK == packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  }\n  else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  }\n  else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var p = {};\n  var i = 0;\n\n  // look up type\n  p.type = Number(str.charAt(0));\n  if (null == exports.types[p.type]) return error();\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT == p.type || exports.BINARY_ACK == p.type) {\n    var buf = '';\n    while (str.charAt(++i) != '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) != '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' == str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' == c) break;\n      p.nsp += c;\n      if (i == str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i == str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    try {\n      p.data = json.parse(str.substr(i));\n    } catch(e){\n      return error();\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length == this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(data){\n  return {\n    type: exports.ERROR,\n    data: 'parser error'\n  };\n}\n","\nmodule.exports = isBuf;\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (global.Buffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer);\n}\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","/*! https://mths.be/utf8js v2.0.0 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tvar byte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.0.0',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/* global Y, global */\n'use strict'\n\n// socket.io requires utf8. This package checks if it is required by requirejs.\n// If window.require is set, then it will define itself as a module. This is erratic behavior and\n// results in socket.io having a \"bad request\".\n// This is why we undefine global.define (it is set by requirejs) before we require socket.io-client.\nvar define = global.define\nglobal.define = null\nvar io = require('socket.io-client')\n// redefine global.define\nglobal.define = define\n\nfunction extend (Y) {\n  class Connector extends Y.AbstractConnector {\n    constructor (y, options) {\n      if (options === undefined) {\n        throw new Error('Options must not be undefined!')\n      }\n      if (options.room == null) {\n        throw new Error('You must define a room name!')\n      }\n      options.role = 'slave'\n      super(y, options)\n      this.options = options\n      options.url = options.url || 'https://yjs.dbis.rwth-aachen.de:5072'\n      var socket = options.socket || io(options.url)\n      this.socket = socket\n      var self = this\n\n      this._onConnect = function joinRoom () {\n        socket.emit('joinRoom', options.room)\n        self.userJoined('server', 'master')\n      }\n\n      socket.on('connect', this._onConnect)\n      if (socket.connected) {\n        this._onConnect()\n      } else {\n        socket.connect()\n      }\n\n      this._onYjsEvent = function (message) {\n        if (message.type != null) {\n          if (message.type === 'sync done') {\n            var userId = socket.id\n            if (socket._yjs_connection_counter == null) {\n              socket._yjs_connection_counter = 1\n            } else {\n              userId += socket._yjs_connection_counter++\n            }\n            self.setUserId(userId)\n          }\n          if (message.room === options.room) {\n            self.receiveMessage('server', message)\n          }\n        }\n      }\n      socket.on('yjsEvent', this._onYjsEvent)\n\n      this._onDisconnect = function (peer) {\n        self.userLeft('server')\n      }\n      socket.on('disconnect', this._onDisconnect)\n    }\n    disconnect () {\n      this.socket.emit('leaveRoom', this.options.room)\n      if (!this.options.socket) {\n        this.socket.disconnect()\n      }\n      super.disconnect()\n    }\n    destroy () {\n      this.disconnect()\n      this.socket.off('disconnect', this._onDisconnect)\n      this.socket.off('yjsEvent', this._onYjsEvent)\n      this.socket.off('connect', this._onConnect)\n      if (!this.options.socket) {\n        this.socket.destroy()\n      }\n      this.socket = null\n    }\n    reconnect () {\n      this.socket.connect()\n      super.reconnect()\n    }\n    send (uid, message) {\n      message.room = this.options.room\n      this.socket.emit('yjsEvent', message)\n    }\n    broadcast (message) {\n      message.room = this.options.room\n      this.socket.emit('yjsEvent', message)\n    }\n    isDisconnected () {\n      return this.socket.disconnected\n    }\n  }\n  Connector.io = io\n  Y.extend('websockets-client', Connector)\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n"],"sourceRoot":"/source/"}